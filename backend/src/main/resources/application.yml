server:
  port: 8080

spring:
  datasource:
    url: jdbc:mysql://localhost:3306/campus_market?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Shanghai&characterEncoding=utf8
    username: root
    password: 123456
    driver-class-name: com.mysql.cj.jdbc.Driver
  redis:
    host: localhost
    port: 6379
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: campus-market
      auto-offset-reset: latest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: '*'
        spring.json.value.default.type: com.campusmarket.messaging.OrderEvent
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    template:
      default-topic: order-events
  servlet:
    multipart:
      max-file-size: 5MB
      max-request-size: 5MB
  jackson:
    serialization:
      WRITE_DATES_AS_TIMESTAMPS: false
  main:
    allow-bean-definition-overriding: true

mybatis-plus:
  configuration:
    map-underscore-to-camel-case: true
  global-config:
    db-config:
      id-type: auto

jwt:
  secret: change-me-super-secret-key-please-replace-with-longer-string-123456
  expiration-ms: 86400000

logging:
  level:
    com.campusmarket: INFO

minio:
  endpoint: http://localhost:9000
  secure: false
  access-key: minioadmin
  secret-key: minioadmin
  bucket:
    goods: campus-market-goods
    chat: campus-market-chat

app:
  kafka:
    order-topic: order-events
